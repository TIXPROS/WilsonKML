{"version":3,"sources":["components/Parser.js","components/ClientMain.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["parser","require","convert","value","finalData","parseString","err","result","days","data","tmpData","forEach","element","index","filter","split","el","push","jsonObject","tmp","date","values","error","console","log","alert","Main","props","showFile","e","a","preventDefault","reader","FileReader","onload","text","target","setState","filed","readAsText","files","render","type","onChange","accept","title","onClick","state","loading","range","CircularProgress","color","modal","finale","length","setChart","map","_el","id","slice","style","top","keys","elem","ind","fontWeight","display","i","current","Promise","r","setTimeout","final","this","indexOf","dayTMP","filteredHour","Object","Date","toLocaleDateString","weekday","year","month","day","charAt","toUpperCase","variable","labels","datasets","label","backgroundColor","Modal","open","onClose","aria-labelledby","aria-describedby","position","alignItems","justifyContent","width","borderColor","alignSelf","fontSize","options","scales","yAxes","ticks","beginAtZero","legend","Component","colSpan","convertDate","padding","marginLeft","zIndex","App","version","document","className","ClientMain","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f94f97cb.chunk.js","sourcesContent":["const parser = require('xml2js')\n\nconst convert = (value) => {\n    try {\n        var finalData = []\n\n    parser.parseString(value, (err, result) => {\n\n        let days = result[\"kml:kml\"]['kml:Document'][0]['kml:ExtendedData'][0]['dwd:ProductDefinition'][0]['dwd:ForecastTimeSteps'][0]['dwd:TimeStep'];\n\n        let data = result[\"kml:kml\"]['kml:Document'][0]['kml:Placemark'][0]['kml:ExtendedData'][0][\"dwd:Forecast\"];\n        var tmpData = [];\n\n        data.forEach((element, index) => {\n\n\n            let tmp = element['dwd:value'][0].split(/\\s+/);\n\n            let filter = tmp.filter(function (el) {\n                return el !== \"\"\n            });\n\n\n            tmpData.push([element[\"$\"]['dwd:elementName'], filter])\n        });\n\n        days.forEach((element, index) => {\n            let jsonObject = {};\n            let tmp = {}\n            jsonObject.date = element;\n            tmpData.forEach(element => {\n                tmp[element[0]] = element[1][index]\n            });\n            jsonObject.values = tmp\n            finalData.push(jsonObject)\n        });\n\n    })\n    return finalData\n    } catch (error) {\n        console.log(error);\n        alert('Le fichier choisi est incompatible')\n        return false;\n    }\n}\n\nexport { convert };","import { CircularProgress, Modal } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Bar } from '@reactchartjs/react-chart.js'\n\n\nimport { convert } from \"./Parser\";\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false,\n            data: [],\n            days: [],\n            finale: [],\n            keys: [],\n            loading: false,\n            modal: false,\n            current: {}\n        }\n    }\n\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            // console.log(data);\n            if (data) {\n                this.setState({ data: data, filed: true })\n            } else {\n                this.setState({ filed: false })\n            }\n\n        };\n        reader.readAsText(e.target.files[0])\n    }\n    async range() {\n        await new Promise(r => setTimeout(r, 3000));\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            // console.log(element.date.split('T')[0]);\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n            // console.log(final[0].values[0].values);\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false }, () => { })\n        })\n        console.log(final[0]);\n    }\n\n\n    convertDate(date) {\n        var tmp = new Date(date)\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        var final = tmp.toLocaleDateString('fr-FR', options)\n        return (final.charAt(0).toUpperCase() + final.slice(1));\n        // console.log(tmp);\n    }\n\n\n    setChart(index, variable) {\n        // console.log(this.state.finale[0].values.filter((el) => {\n        //     return el.date\n        // }));\n        const labels = this.state.finale[this.state.current.index].values.map((el) => (el.date.split('T')[1].slice(0, 2) + \"Z\"))\n        const data = this.state.finale[this.state.current.index].values.map((el) => (el.values[this.state.current.variable]))\n\n        const state = {\n            labels: labels,\n            datasets: [\n                {\n                    label: this.state.current.variable,\n                    backgroundColor: '#f50057',\n                    // borderColor: 'rgba(0,0,0,1)',\n                    // borderWidth: 2,\n                    data: data\n                }\n            ]\n        }\n        return (\n            <Modal\n                open={() => { this.setState({ modal: true }) }}\n                onClose={() => { this.setState({ modal: false }) }}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                {/* {body} */}\n                <div style={{ backgroundColor: '#fff', width: 800, borderColor: \"#fff\" }} >\n\n                    <button type=\"button\" onClick={() => { this.setState({ modal: false }) }} style={{ backgroundColor: \"red\", alignSelf: \"center\", fontSize: 13, fontWeight: \"bold\" }} >Fermer</button>\n                    <Bar\n                        data={state}\n                        options={{\n                            title: {\n                                display: true,\n                                text: this.state.current.date,\n                                fontSize: 20\n                            },\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n                </div>\n            </Modal>\n        )\n\n    }\n\n    render = () => {\n\n        return (\n            <div>\n                <h2>Convertisseur Kml to JS</h2>\n\n                <input type=\"file\" onChange={(e) => this.showFile(e)} accept='.xml,.kml' />\n                {/* <DataTable\n                    title=\"Arnold Movies\"\n                    columns={columns}\n                    data={this.state.data}\n                /> */}\n                <button title='Valider' onClick={() => {\n                    if (this.state.filed) {\n                        this.setState({ loading: true }, () => { this.range() })\n                    } else {\n                        alert('Veuillez choisir un fichier à convertir')\n                    }\n                }} >Valider</button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.filed && this.state.modal && this.state.finale.length > 0 && this.setChart()\n                    }\n                    {\n                        <div >\n\n                            <table>\n                                <thead  >\n                                    <tr>\n                                        {\n                                            this.state.finale.length > 0 && this.state.filed && <th ></th>\n                                        }\n                                        {\n                                            this.state.finale.map((_el, index) => (\n                                                _el.values.map((el, id) => (\n                                                    <th key={id} >{_el.date.slice(8, 10)}</th>\n                                                ))\n                                            ))\n                                        }\n                                    </tr>\n                                    <tr>\n                                        {\n                                            this.state.finale.length > 0 && this.state.filed && <th style={{ top: 40 }} ></th>\n                                        }\n                                        {\n                                            this.state.finale.map((_el, index) => (\n                                                _el.values.map((el, id) => (\n                                                    <th style={{ top: 40 }} key={id} >{el.date.split('T')[1].slice(0, 2) + \"Z\"}</th>\n                                                ))\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.keys.map((elem, ind) => (\n                                            <tr key={ind} >\n                                                <td style={{ fontWeight: 'bold', display: 'block' }} >\n                                                    {elem}\n                                                    {/* <br /><button type=\"button\" onClick={() => { this.setState({ modal: true, current: { variable: elem, index: index, date: this.convertDate(_el.date) } }) }} style={{ backgroundColor: \"#3f51b5\", padding: 2, marginLeft: 5, alignSelf: \"center\", fontSize: 10, fontWeight: \"bold\", zIndex: 0 }} >Voir le graphe</button> */}\n                                                </td>\n                                                {\n                                                    this.state.finale.map((_el, index) => (\n                                                        _el.values.map((el, i) => (\n                                                            <td key={i} >{el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]}</td>\n                                                        ))\n                                                    ))\n                                                }\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;","import { CircularProgress, Modal } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Bar } from '@reactchartjs/react-chart.js'\n\n\nimport { convert } from \"./Parser\";\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false,\n            data: [],\n            days: [],\n            finale: [],\n            keys: [],\n            loading: false,\n            modal: false,\n            current: {}\n        }\n    }\n\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            // console.log(data);\n            if (data) {\n                this.setState({ data: data, filed: true })\n            } else {\n                this.setState({ filed: false })\n            }\n\n        };\n        reader.readAsText(e.target.files[0])\n    }\n    async range() {\n        await new Promise(r => setTimeout(r, 3000));\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            // console.log(element.date.split('T')[0]);\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n            // console.log(final[0].values[0].values);\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false }, () => { })\n        })\n        console.log(final[0]);\n    }\n\n\n    convertDate(date) {\n        var tmp = new Date(date)\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        var final = tmp.toLocaleDateString('fr-FR', options)\n        return (final.charAt(0).toUpperCase() + final.slice(1));\n        // console.log(tmp);\n    }\n\n\n    setChart(index, variable) {\n        // console.log(this.state.finale[0].values.filter((el) => {\n        //     return el.date\n        // }));\n        const labels = this.state.finale[this.state.current.index].values.map((el) => (el.date.split('T')[1].slice(0, 2) + \"Z\"))\n        const data = this.state.finale[this.state.current.index].values.map((el) => (el.values[this.state.current.variable]))\n\n        const state = {\n            labels: labels,\n            datasets: [\n                {\n                    label: this.state.current.variable,\n                    backgroundColor: '#f50057',\n                    // borderColor: 'rgba(0,0,0,1)',\n                    // borderWidth: 2,\n                    data: data\n                }\n            ]\n        }\n        return (\n            <Modal\n                open={() => { this.setState({ modal: true }) }}\n                onClose={() => { this.setState({ modal: false }) }}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                {/* {body} */}\n                <div style={{ backgroundColor: '#fff', width: 800, borderColor: \"#fff\" }} >\n\n                    <button type=\"button\" onClick={() => { this.setState({ modal: false }) }} style={{ backgroundColor: \"red\", alignSelf: \"center\", fontSize: 13, fontWeight: \"bold\" }} >Fermer</button>\n                    <Bar\n                        data={state}\n                        options={{\n                            title: {\n                                display: true,\n                                text: this.state.current.date,\n                                fontSize: 20\n                            },\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n                </div>\n            </Modal>\n        )\n\n    }\n\n    render = () => {\n\n        return (\n            <div>\n                <h2>Convertisseur Kml to JS</h2>\n\n                <input type=\"file\" onChange={(e) => this.showFile(e)} accept='.xml,.kml' />\n                {/* <DataTable\n                    title=\"Arnold Movies\"\n                    columns={columns}\n                    data={this.state.data}\n                /> */}\n                <button title='Valider' onClick={() => {\n                    if (this.state.filed) {\n                        this.setState({ loading: true }, () => { this.range() })\n                    } else {\n                        alert('Veuillez choisir un fichier à convertir')\n                    }\n                }} >Valider</button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.filed && this.state.modal && this.state.finale.length > 0 && this.setChart()\n                    }\n                    {\n                        this.state.finale.map((_el, index) => (\n                            <div key={index} >\n                                {/* <h3>{this.convertDate(_el.date)}</h3> */}\n\n                                <table>\n                                    <thead  >\n                                        <tr>\n                                            <th colSpan={_el.values.length + 1}  >{this.convertDate(_el.date)}</th>\n                                        </tr>\n                                        <tr>\n                                            <th style={{ top: 35 }} ></th>\n                                            {\n                                                _el.values.map((el, id) => (\n                                                    <th style={{ top: 35 }} key={id} >{el.date.split('T')[1].slice(0, 2) + \"Z\"}</th>\n                                                ))\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.keys.map((elem, ind) => (\n                                                <tr key={ind} >\n                                                    <td style={{ fontWeight: 'bold', display: 'block' }} >\n                                                        {elem}\n                                                        <br /><button type=\"button\" onClick={() => { this.setState({ modal: true, current: { variable: elem, index: index, date: this.convertDate(_el.date) } }) }} style={{ backgroundColor: \"#3f51b5\", padding: 2, marginLeft: 5, alignSelf: \"center\", fontSize: 10, fontWeight: \"bold\", zIndex: 0 }} >Voir le graphe</button>\n                                                    </td>\n                                                    {\n                                                        _el.values.map((el, i) => (\n                                                            <td key={i} >{el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]}</td>\n                                                        ))\n                                                    }\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React, { Component } from 'react'\nimport ClientMain from \"./components/ClientMain\";\nimport Main from \"./components/Main\";\nimport './App.css';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      version: 1\n    }\n  }\n\n  componentDidMount() {\n    document.title = 'Wilson KML';\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.version === 1 ?\n            <ClientMain /> :\n            <Main />\n        }\n        <span style={{ fontSize: \"12px\" }} >powered by <a href = \"https://tixpros.pro/\" target=\"_blank\" >TixPros</a> - V{this.state.version}</span>\n        <br />\n        <button\n          style={{ fontSize: 12, padding: 2 }}\n          onClick={() => { this.setState({ version: this.state.version === 1 ? 2 : 1 }) }} >Voir la version {this.state.version === 1 ? 2 : 1}</button>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}