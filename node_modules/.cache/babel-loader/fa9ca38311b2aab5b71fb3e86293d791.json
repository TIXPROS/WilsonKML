{"ast":null,"code":"const variablesGroups = [{\n  variable: \"PPPP\",\n  group: 1\n}, {\n  variable: \"E_PPP\",\n  group: 1\n}, {\n  variable: \"TX\",\n  group: 2\n}, {\n  variable: \"TTT\",\n  group: 2\n}, {\n  variable: \"E_TTT\",\n  group: 2\n}, {\n  variable: \"Td\",\n  group: 2\n}, {\n  variable: \"E_Td\",\n  group: 2\n}, {\n  variable: \"TN\",\n  group: 2\n}, {\n  variable: \"TG\",\n  group: 2\n}, {\n  variable: \"TM\",\n  group: 2\n}, {\n  variable: \"T5cm\",\n  group: 2\n}, {\n  variable: \"FF\",\n  group: 3\n}, {\n  variable: \"E_FF\",\n  group: 3\n}, {\n  variable: \"FX1\",\n  group: 3\n}, {\n  variable: \"FX3\",\n  group: 3\n}, {\n  variable: \"FXh\",\n  group: 3\n}, {\n  variable: \"VV\",\n  group: 4\n}];\n\nfunction findGroup(variable, value) {\n  console.log(variable, value);\n  var tmp = null;\n  tmp = variablesGroups.find(el => el.variable === variable);\n\n  if (tmp) {\n    switch (tmp.group) {\n      case 1:\n        return convert_1(value);\n      // break;\n\n      default:\n        return value;\n      // break;\n    }\n  } else {\n    return value;\n  }\n}\n\nfunction convert_1(val) {\n  return val / 100;\n}\n\nexport { findGroup };","map":{"version":3,"sources":["/root/Bureau/Parser/src/constants/unityConvert.js"],"names":["variablesGroups","variable","group","findGroup","value","console","log","tmp","find","el","convert_1","val"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CACpB;AACIC,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADoB,EAKpB;AACID,EAAAA,QAAQ,EAAE,OADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALoB,EASpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAToB,EAapB;AACID,EAAAA,QAAQ,EAAE,KADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAboB,EAiBpB;AACID,EAAAA,QAAQ,EAAE,OADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjBoB,EAqBpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CArBoB,EAyBpB;AACID,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAzBoB,EA6BpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CA7BoB,EAiCpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjCoB,EAqCpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CArCoB,EAyCpB;AACID,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAzCoB,EA6CpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CA7CoB,EAiDpB;AACID,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjDoB,EAqDpB;AACID,EAAAA,QAAQ,EAAE,KADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CArDoB,EAyDpB;AACID,EAAAA,QAAQ,EAAE,KADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAzDoB,EA6DpB;AACID,EAAAA,QAAQ,EAAE,KADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CA7DoB,EAiEpB;AACID,EAAAA,QAAQ,EAAE,IADd;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjEoB,CAAxB;;AAsEA,SAASC,SAAT,CAAmBF,QAAnB,EAA6BG,KAA7B,EAAoC;AAIhCC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBG,KAAtB;AAEA,MAAIG,GAAG,GAAG,IAAV;AACAA,EAAAA,GAAG,GAAGP,eAAe,CAACQ,IAAhB,CAAsBC,EAAD,IAAQA,EAAE,CAACR,QAAH,KAAgBA,QAA7C,CAAN;;AAEA,MAAIM,GAAJ,EAAS;AACL,YAAQA,GAAG,CAACL,KAAZ;AACI,WAAK,CAAL;AACI,eAAOQ,SAAS,CAACN,KAAD,CAAhB;AACJ;;AAEA;AACI,eAAOA,KAAP;AACJ;AAPJ;AASH,GAVD,MAUO;AACH,WAAOA,KAAP;AACH;AACJ;;AAED,SAASM,SAAT,CAAmBC,GAAnB,EAAwB;AACpB,SAAQA,GAAG,GAAG,GAAd;AACH;;AAED,SAASR,SAAT","sourcesContent":["const variablesGroups = [\n    {\n        variable: \"PPPP\",\n        group: 1\n    },\n    {\n        variable: \"E_PPP\",\n        group: 1\n    },\n    {\n        variable: \"TX\",\n        group: 2\n    },\n    {\n        variable: \"TTT\",\n        group: 2\n    },\n    {\n        variable: \"E_TTT\",\n        group: 2\n    },\n    {\n        variable: \"Td\",\n        group: 2\n    },\n    {\n        variable: \"E_Td\",\n        group: 2\n    },\n    {\n        variable: \"TN\",\n        group: 2\n    },\n    {\n        variable: \"TG\",\n        group: 2\n    },\n    {\n        variable: \"TM\",\n        group: 2\n    },\n    {\n        variable: \"T5cm\",\n        group: 2\n    },\n    {\n        variable: \"FF\",\n        group: 3\n    },\n    {\n        variable: \"E_FF\",\n        group: 3\n    },\n    {\n        variable: \"FX1\",\n        group: 3\n    },\n    {\n        variable: \"FX3\",\n        group: 3\n    },\n    {\n        variable: \"FXh\",\n        group: 3\n    },\n    {\n        variable: \"VV\",\n        group: 4\n    }\n]\nfunction findGroup(variable, value) {\n\n\n\n    console.log(variable, value);\n\n    var tmp = null\n    tmp = variablesGroups.find((el) => el.variable === variable)\n\n    if (tmp) {\n        switch (tmp.group) {\n            case 1:\n                return convert_1(value)\n            // break;\n\n            default:\n                return value\n            // break;\n        }\n    } else {\n        return value\n    }\n}\n\nfunction convert_1(val) {\n    return (val / 100)\n}\n\nexport { findGroup }"]},"metadata":{},"sourceType":"module"}