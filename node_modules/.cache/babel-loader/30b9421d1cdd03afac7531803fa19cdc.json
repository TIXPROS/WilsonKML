{"ast":null,"code":"var _jsxFileName = \"/root/Bureau/Parser/src/components/Main.js\";\nimport { CircularProgress, Modal } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Bar } from '@reactchartjs/react-chart.js';\nimport { convert } from \"./Parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        var data = convert(text); // console.log(data);\n\n        if (data) {\n          this.setState({\n            data: data,\n            filed: true\n          });\n        } else {\n          this.setState({\n            filed: false\n          });\n        }\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Convertisseur Kml to JS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => this.showFile(e),\n          accept: \".xml,.kml\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Valider\",\n          onClick: () => {\n            if (this.state.filed) {\n              this.setState({\n                loading: true\n              }, () => {\n                this.range();\n              });\n            } else {\n              alert('Veuillez choisir un fichier Ã  convertir');\n            }\n          },\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.state.filed && this.state.modal && this.state.finale.length > 0 && this.setChart(), this.state.finale.map((_el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.convertDate(_el.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), _el.values.map((el, id) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: el.date.split('T')[1].slice(0, 2) + \"Z\"\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.keys.map((elem, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      fontWeight: 'bold',\n                      display: 'block'\n                    },\n                    children: [elem, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => {\n                        this.setState({\n                          modal: true,\n                          current: {\n                            variable: elem,\n                            index: index,\n                            date: this.convertDate(_el.date)\n                          }\n                        });\n                      },\n                      style: {\n                        backgroundColor: \"#3f51b5\",\n                        padding: 2,\n                        marginLeft: 5,\n                        alignSelf: \"center\",\n                        fontSize: 10,\n                        fontWeight: \"bold\",\n                        zIndex: 0\n                      },\n                      children: \"Voir le graphe\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 63\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 53\n                  }, this), _el.values.map((el, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 61\n                  }, this))]\n                }, ind, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      filed: false,\n      data: [],\n      days: [],\n      finale: [],\n      keys: [],\n      loading: false,\n      modal: false,\n      current: {}\n    };\n  }\n\n  async range() {\n    await new Promise(r => setTimeout(r, 3000));\n    var days = [];\n    var final = [];\n    this.state.data.forEach(element => {\n      // console.log(element.date.split('T')[0]);\n      var existed = days.indexOf(element.date.split('T')[0]);\n\n      if (existed === -1) {\n        var dayTMP = element.date.split('T')[0];\n        days.push(dayTMP);\n      }\n    });\n    this.setState({\n      days: days\n    }, () => {\n      days.forEach(element => {\n        var filteredHour = this.state.data.filter(el => el.date.split('T')[0] === element);\n        var tmp = {};\n        tmp['date'] = element;\n        tmp[\"values\"] = filteredHour;\n        final.push(tmp);\n      }); // console.log(final[0].values[0].values);\n\n      this.setState({\n        finale: final,\n        keys: Object.keys(final[0].values[0].values),\n        loading: false\n      }, () => {});\n    });\n    console.log(final[0]);\n  }\n\n  convertDate(date) {\n    var tmp = new Date(date);\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    var final = tmp.toLocaleDateString('fr-FR', options);\n    return final.charAt(0).toUpperCase() + final.slice(1); // console.log(tmp);\n  }\n\n  setChart(index, variable) {\n    // console.log(this.state.finale[0].values.filter((el) => {\n    //     return el.date\n    // }));\n    const labels = this.state.finale[this.state.current.index].values.map(el => el.date.split('T')[1].slice(0, 2) + \"Z\");\n    const data = this.state.finale[this.state.current.index].values.map(el => el.values[this.state.current.variable]);\n    const state = {\n      labels: labels,\n      datasets: [{\n        label: this.state.current.variable,\n        backgroundColor: '#f50057',\n        // borderColor: 'rgba(0,0,0,1)',\n        // borderWidth: 2,\n        data: data\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      open: () => {\n        this.setState({\n          modal: true\n        });\n      },\n      onClose: () => {\n        this.setState({\n          modal: false\n        });\n      },\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      style: {\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#fff',\n          width: 800,\n          borderColor: \"#fff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            this.setState({\n              modal: false\n            });\n          },\n          style: {\n            backgroundColor: \"red\",\n            alignSelf: \"center\",\n            fontSize: 13,\n            fontWeight: \"bold\"\n          },\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: state,\n          options: {\n            title: {\n              display: true,\n              text: this.state.current.date,\n              fontSize: 20\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/root/Bureau/Parser/src/components/Main.js"],"names":["CircularProgress","Modal","React","Component","Bar","convert","Main","constructor","props","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","data","setState","filed","readAsText","files","render","state","loading","range","alert","modal","finale","length","setChart","map","_el","index","convertDate","date","values","el","id","split","slice","keys","elem","ind","fontWeight","display","current","variable","backgroundColor","padding","marginLeft","alignSelf","fontSize","zIndex","i","days","Promise","r","setTimeout","final","forEach","element","existed","indexOf","dayTMP","push","filteredHour","filter","tmp","Object","console","log","Date","options","weekday","year","month","day","toLocaleDateString","charAt","toUpperCase","labels","datasets","label","position","alignItems","justifyContent","width","borderColor","title","scales","yAxes","ticks","beginAtZero","legend"],"mappings":"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","sourcesContent":["import { CircularProgress, Modal } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Bar } from '@reactchartjs/react-chart.js'\n\n\nimport { convert } from \"./Parser\";\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false,\n            data: [],\n            days: [],\n            finale: [],\n            keys: [],\n            loading: false,\n            modal: false,\n            current: {}\n        }\n    }\n\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            // console.log(data);\n            if (data) {\n                this.setState({ data: data, filed: true })\n            } else {\n                this.setState({ filed: false })\n            }\n\n        };\n        reader.readAsText(e.target.files[0])\n    }\n    async range() {\n        await new Promise(r => setTimeout(r, 3000));\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            // console.log(element.date.split('T')[0]);\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n            // console.log(final[0].values[0].values);\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false }, () => { })\n        })\n        console.log(final[0]);\n    }\n\n\n    convertDate(date) {\n        var tmp = new Date(date)\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        var final = tmp.toLocaleDateString('fr-FR', options)\n        return (final.charAt(0).toUpperCase() + final.slice(1));\n        // console.log(tmp);\n    }\n\n\n    setChart(index, variable) {\n        // console.log(this.state.finale[0].values.filter((el) => {\n        //     return el.date\n        // }));\n        const labels = this.state.finale[this.state.current.index].values.map((el) => (el.date.split('T')[1].slice(0, 2) + \"Z\"))\n        const data = this.state.finale[this.state.current.index].values.map((el) => (el.values[this.state.current.variable]))\n\n        const state = {\n            labels: labels,\n            datasets: [\n                {\n                    label: this.state.current.variable,\n                    backgroundColor: '#f50057',\n                    // borderColor: 'rgba(0,0,0,1)',\n                    // borderWidth: 2,\n                    data: data\n                }\n            ]\n        }\n        return (\n            <Modal\n                open={() => { this.setState({ modal: true }) }}\n                onClose={() => { this.setState({ modal: false }) }}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                {/* {body} */}\n                <div style={{ backgroundColor: '#fff', width: 800, borderColor: \"#fff\" }} >\n\n                    <button type=\"button\" onClick={() => { this.setState({ modal: false }) }} style={{ backgroundColor: \"red\", alignSelf: \"center\", fontSize: 13, fontWeight: \"bold\" }} >Fermer</button>\n                    <Bar\n                        data={state}\n                        options={{\n                            title: {\n                                display: true,\n                                text: this.state.current.date,\n                                fontSize: 20\n                            },\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n                </div>\n            </Modal>\n        )\n\n    }\n\n    render = () => {\n\n        return (\n            <div>\n                <h2>Convertisseur Kml to JS</h2>\n\n                <input type=\"file\" onChange={(e) => this.showFile(e)} accept='.xml,.kml' />\n                {/* <DataTable\n                    title=\"Arnold Movies\"\n                    columns={columns}\n                    data={this.state.data}\n                /> */}\n                <button title='Valider' onClick={() => {\n                    if (this.state.filed) {\n                        this.setState({ loading: true }, () => { this.range() })\n                    } else {\n                        alert('Veuillez choisir un fichier Ã  convertir')\n                    }\n                }} >Valider</button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.filed && this.state.modal && this.state.finale.length > 0 && this.setChart()\n                    }\n                    {\n                        this.state.finale.map((_el, index) => (\n                            <div key={index} >\n                                <h3>{this.convertDate(_el.date)}</h3>\n\n                                <table>\n                                    <thead  >\n                                        <tr>\n                                            <th ></th>\n                                            {\n                                                _el.values.map((el, id) => (\n                                                    <th key={id} >{el.date.split('T')[1].slice(0, 2) + \"Z\"}</th>\n                                                ))\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.keys.map((elem, ind) => (\n                                                <tr key={ind} >\n                                                    <td style={{ fontWeight: 'bold', display: 'block' }} >\n                                                        {elem}\n                                                        <br /><button type=\"button\" onClick={() => { this.setState({ modal: true, current: { variable: elem, index: index, date : this.convertDate(_el.date) } }) }} style={{ backgroundColor: \"#3f51b5\", padding: 2, marginLeft: 5, alignSelf: \"center\", fontSize: 10, fontWeight: \"bold\", zIndex: 0 }} >Voir le graphe</button>\n                                                    </td>\n                                                    {\n                                                        _el.values.map((el, i) => (\n                                                            <td key={i} >{el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]}</td>\n                                                        ))\n                                                    }\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}