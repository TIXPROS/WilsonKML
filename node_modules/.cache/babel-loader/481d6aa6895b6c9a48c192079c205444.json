{"ast":null,"code":"const variablesGroups = [{\n  variable: \"PPPP\",\n  group: 1\n}, {\n  variable: \"E_PPP\",\n  group: 1\n}, {\n  variable: \"TX\",\n  group: 2\n}, {\n  variable: \"TTT\",\n  group: 2\n}, {\n  variable: \"E_TTT\",\n  group: 2\n}, {\n  variable: \"Td\",\n  group: 2\n}, {\n  variable: \"E_Td\",\n  group: 2\n}, {\n  variable: \"TN\",\n  group: 2\n}, {\n  variable: \"TG\",\n  group: 2\n}, {\n  variable: \"TM\",\n  group: 2\n}, {\n  variable: \"T5cm\",\n  group: 2\n}, {\n  variable: \"FF\",\n  group: 3\n}, {\n  variable: \"E_FF\",\n  group: 3\n}, {\n  variable: \"FX1\",\n  group: 3\n}, {\n  variable: \"FX3\",\n  group: 3\n}, {\n  variable: \"FXh\",\n  group: 3\n}, {\n  variable: \"VV\",\n  group: 4\n}];\n\nfunction findGroup(variable, value) {\n  var tmp = null;\n  tmp = variablesGroups.find(el => el.variable === variable);\n\n  if (tmp) {\n    switch (tmp.group) {\n      case 1:\n        return convert_1(value);\n\n      case 2:\n        return convert_2(value);\n\n      case 3:\n        return convert_3(value);\n\n      case 4:\n        return convert_4(value);\n\n      default:\n        return value;\n    }\n  } else {\n    return value;\n  }\n}\n\nfunction convert_1(val) {\n  var result = val / 100;\n  return (Math.round(result * 10) / 10).toFixed(1);\n}\n\nfunction convert_2(val) {\n  var result = val - 273.15;\n  return (Math.round(result * 10) / 10).toFixed(1);\n}\n\nfunction convert_3(val) {\n  var result = val * 1.94384;\n  return (Math.round(result * 10) / 10).toFixed(1);\n}\n\nfunction convert_4(val) {\n  var result = val / 100;\n  return (Math.round(result * 10) / 10).toFixed(1);\n}\n\nexport { findGroup };","map":{"version":3,"sources":["/root/Bureau/Parser/src/constants/unityConvert.js"],"names":["variablesGroups","variable","group","findGroup","value","tmp","find","el","convert_1","convert_2","convert_3","convert_4","val","result","Math","round","toFixed"],"mappings":"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","sourcesContent":["const variablesGroups = [\n    {\n        variable: \"PPPP\",\n        group: 1\n    },\n    {\n        variable: \"E_PPP\",\n        group: 1\n    },\n    {\n        variable: \"TX\",\n        group: 2\n    },\n    {\n        variable: \"TTT\",\n        group: 2\n    },\n    {\n        variable: \"E_TTT\",\n        group: 2\n    },\n    {\n        variable: \"Td\",\n        group: 2\n    },\n    {\n        variable: \"E_Td\",\n        group: 2\n    },\n    {\n        variable: \"TN\",\n        group: 2\n    },\n    {\n        variable: \"TG\",\n        group: 2\n    },\n    {\n        variable: \"TM\",\n        group: 2\n    },\n    {\n        variable: \"T5cm\",\n        group: 2\n    },\n    {\n        variable: \"FF\",\n        group: 3\n    },\n    {\n        variable: \"E_FF\",\n        group: 3\n    },\n    {\n        variable: \"FX1\",\n        group: 3\n    },\n    {\n        variable: \"FX3\",\n        group: 3\n    },\n    {\n        variable: \"FXh\",\n        group: 3\n    },\n    {\n        variable: \"VV\",\n        group: 4\n    }\n]\nfunction findGroup(variable, value) {\n\n\n\n    var tmp = null\n    tmp = variablesGroups.find((el) => el.variable === variable)\n\n    if (tmp) {\n        switch (tmp.group) {\n            case 1:\n                return convert_1(value)\n\n            case 2:\n                return convert_2(value)\n\n            case 3:\n                return convert_3(value)\n            case 4:\n                return convert_4(value)\n\n            default:\n                return value\n        }\n    } else {\n        return value\n    }\n}\n\nfunction convert_1(val) {\n    var result = (val / 100)\n    return (Math.round(result * 10) / 10).toFixed(1)\n}\n\nfunction convert_2(val) {\n    var result = (val - 273.15)\n    return (Math.round(result * 10) / 10).toFixed(1)\n}\n\nfunction convert_3(val) {\n    var result = (val * 1.94384)\n    return (Math.round(result * 10) / 10).toFixed(1)\n}\nfunction convert_4(val) {\n    var result = (val / 100)\n    return (Math.round(result * 10) / 10).toFixed(1)\n}\n\nexport { findGroup }"]},"metadata":{},"sourceType":"module"}