{"ast":null,"code":"var _jsxFileName = \"/root/Bureau/Parser/src/components/ClientMain.js\";\nimport { Button, CircularProgress, Input, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { findVariableName, findVariableUnit } from '../constants/variableName'; //Importation des fonctions permettant de retrouver les noms et les unités des variables \n\nimport { convert } from \"./Parser\"; //Importation de l'extracteur redéfnie\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionTitles = [\"All\", \"Wind\", \"Wind speed threshold\", \"Wind gusts 1h\", \"Wind gusts 3h\", \"Temperature\", \"Visibility\"];\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        var data = convert(text);\n\n        if (data) {\n          this.setState({\n            data: data,\n            filed: true\n          });\n        } else {\n          this.setState({\n            filed: false\n          });\n        }\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.state = {\n      filed: false,\n      //Controleur de l'existence d'un fichier chargé\n      data: [],\n      //les lignes de données\n      days: [],\n      //les jours\n      finale: [],\n      //données compilées\n      keys: [],\n      //les variables (PPPP et autres)\n      loading: false //Controleur du chargement de la page\n\n    };\n  } //Fonction de récupération de fichier\n\n\n  //Fonction de compilation des données\n  async range() {\n    // await new Promise(r => setTimeout(r, 3000));\n    var days = [];\n    var final = [];\n    this.state.data.forEach(element => {\n      var existed = days.indexOf(element.date.split('T')[0]);\n\n      if (existed === -1) {\n        var dayTMP = element.date.split('T')[0];\n        days.push(dayTMP);\n      }\n    });\n    this.setState({\n      days: days\n    }, () => {\n      //Extraction du Jour/Mois/Années des dates\n      days.forEach(element => {\n        var filteredHour = this.state.data.filter(el => el.date.split('T')[0] === element);\n        var tmp = {};\n        tmp['date'] = element;\n        tmp[\"values\"] = filteredHour;\n        final.push(tmp);\n      });\n      this.setState({\n        finale: final,\n        keys: Object.keys(final[0].values[0].values),\n        loading: false\n      }, () => {});\n    });\n  } //Rendu visuel\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h2\",\n        children: \"Convertisseur Kml to JS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        onChange: e => this.showFile(e),\n        inputProps: {\n          accept: '.xml,.kml'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Valider\",\n        onClick: () => {\n          if (this.state.filed) {\n            this.setState({\n              loading: true\n            }, () => {\n              this.range();\n            });\n          } else {\n            alert('Veuillez choisir un fichier à convertir');\n          }\n        },\n        color: \"primary\",\n        variant: \"contained\",\n        style: {\n          marginTop: 10\n        },\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\",\n          style: {\n            marginTop: 15\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.finale.length > 0 && this.state.filed && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.selector,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"label\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"label\",\n              id: \"select\",\n              value: \"EBBR\",\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"EBBR\",\n                children: \"EBBR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.selector,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"label\",\n              children: \"Parameter group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"label\",\n              id: \"select\",\n              value: \"All\",\n              children: sectionTitles.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: el,\n                children: el\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [this.state.finale.length > 0 && this.state.filed && /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    top: 0\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 97\n                }, this), this.state.finale.map(_el => _el.values.map((el, id) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    top: 0\n                  },\n                  children: [_el.date.slice(8, 10), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 80\n                  }, this), el.date.split('T')[1].slice(0, 2) + \"Z\"]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 53\n                }, this)))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.keys.map((elem, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    color: \"#fff\",\n                    backgroundColor: \"#1a8cff\",\n                    left: 0,\n                    position: \"sticky\"\n                  },\n                  children: findVariableName(elem) === false ? elem : findVariableName(elem) + \"\\n(\" + findVariableUnit(elem) + \")\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 49\n                }, this), this.state.finale.map(_el => _el.values.map((el, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 61\n                }, this)))]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst styles = {\n  selector: {\n    displey: \"flex\",\n    flexDirection: 'row',\n    margin: 15\n  }\n};\nexport default Main;","map":{"version":3,"sources":["/root/Bureau/Parser/src/components/ClientMain.js"],"names":["Button","CircularProgress","Input","InputLabel","MenuItem","Select","Typography","React","Component","findVariableName","findVariableUnit","convert","sectionTitles","Main","constructor","props","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","data","setState","filed","readAsText","files","state","days","finale","keys","loading","range","final","forEach","element","existed","indexOf","date","split","dayTMP","push","filteredHour","filter","el","tmp","Object","values","render","accept","alert","marginTop","length","display","flexDirection","styles","selector","map","index","top","_el","id","slice","elem","ind","fontWeight","color","backgroundColor","left","position","i","displey","margin"],"mappings":"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","sourcesContent":["import { Button, CircularProgress, Input, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { findVariableName, findVariableUnit } from '../constants/variableName' //Importation des fonctions permettant de retrouver les noms et les unités des variables \n\n\nimport { convert } from \"./Parser\";//Importation de l'extracteur redéfnie\n\n\nconst sectionTitles = [\n    \"All\",\n    \"Wind\",\n    \"Wind speed threshold\",\n    \"Wind gusts 1h\",\n    \"Wind gusts 3h\",\n    \"Temperature\",\n    \"Visibility\",\n];\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false, //Controleur de l'existence d'un fichier chargé\n            data: [], //les lignes de données\n            days: [], //les jours\n            finale: [], //données compilées\n            keys: [], //les variables (PPPP et autres)\n            loading: false, //Controleur du chargement de la page\n        }\n    }\n\n    //Fonction de récupération de fichier\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            if (data) {\n                this.setState({ data: data, filed: true })\n            } else {\n                this.setState({ filed: false })\n            }\n\n        };\n        reader.readAsText(e.target.files[0])\n    }\n\n\n    //Fonction de compilation des données\n    async range() {\n        // await new Promise(r => setTimeout(r, 3000));\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            //Extraction du Jour/Mois/Années des dates\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false }, () => { })\n        })\n    }\n\n    //Rendu visuel\n    render() {\n\n        return (\n            <div>\n                <Typography variant=\"h3\" component=\"h2\">Convertisseur Kml to JS</Typography>\n                <Input type=\"file\" onChange={(e) => this.showFile(e)} inputProps={{ accept: '.xml,.kml' }} />\n                <br />\n                <Button\n                    title='Valider'\n                    onClick={() => {\n                        if (this.state.filed) {\n                            this.setState({ loading: true }, () => { this.range() })\n                        } else {\n                            alert('Veuillez choisir un fichier à convertir')\n                        }\n                    }}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ marginTop: 10 }}\n                >Valider</Button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" style={{ marginTop: 15 }} />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.finale.length > 0 && this.state.filed &&\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }} >\n\n                            <div style={styles.selector} >\n                                <InputLabel id=\"label\">Location</InputLabel>\n                                <Select labelId=\"label\" id=\"select\" value=\"EBBR\">\n                                    <MenuItem value=\"EBBR\">EBBR</MenuItem>\n                                </Select>\n                            </div>\n\n                            <div style={styles.selector} >\n                                <InputLabel id=\"label\">Parameter group</InputLabel>\n                                <Select labelId=\"label\" id=\"select\" value=\"All\">\n                                    {\n                                        sectionTitles.map((el, index) => (\n                                            <MenuItem key={index} value={el}>{el}</MenuItem>\n                                        ))\n                                    }\n                                </Select>\n                            </div>\n                        </div>\n                    }\n                    {\n                        <div >\n\n                            <table>\n                                <thead  >\n                                    <tr>\n                                        {\n                                            this.state.finale.length > 0 && this.state.filed && <th style={{ top: 0 }} ></th>\n                                        }\n                                        {\n                                            this.state.finale.map((_el) => (\n                                                _el.values.map((el, id) => (\n                                                    <th style={{ top: 0 }} key={id} >\n                                                        {_el.date.slice(8, 10)}<br />\n                                                        {el.date.split('T')[1].slice(0, 2) + \"Z\"}\n                                                    </th>\n                                                ))\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.keys.map((elem, ind) => (\n                                            <tr key={ind} >\n                                                <td style={{ fontWeight: 'bold', color: \"#fff\", backgroundColor: \"#1a8cff\", left: 0, position: \"sticky\" }} >\n                                                    {findVariableName(elem) === false ? elem : (findVariableName(elem) + \"\\n(\" + findVariableUnit(elem) + \")\")}\n                                                </td>\n                                                {\n                                                    this.state.finale.map((_el) => (\n                                                        _el.values.map((el, i) => (\n                                                            <td key={i} >{el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]}</td>\n                                                        ))\n                                                    ))\n                                                }\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selector: {\n        displey: \"flex\",\n        flexDirection: 'row',\n        margin: 15\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}