{"ast":null,"code":"var _jsxFileName = \"/root/Bureau/Parser/src/components/ClientMain.js\";\nimport { CircularProgress, InputLabel, MenuItem, Modal, Select } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Bar } from '@reactchartjs/react-chart.js';\nimport { convert } from \"./Parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        var data = convert(text); // console.log(data);\n\n        if (data) {\n          this.setState({\n            data: data,\n            filed: true\n          });\n        } else {\n          this.setState({\n            filed: false\n          });\n        }\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Convertisseur Kml to JS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => this.showFile(e),\n          accept: \".xml,.kml\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Valider\",\n          onClick: () => {\n            if (this.state.filed) {\n              this.setState({\n                loading: true\n              }, () => {\n                this.range();\n              });\n            } else {\n              alert('Veuillez choisir un fichier Ã  convertir');\n            }\n          },\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.state.filed && this.state.modal && this.state.finale.length > 0 && this.setChart(), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.selector,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"label\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"label\",\n                id: \"select\",\n                value: \"20\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"10\",\n                  children: \"Ten\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"20\",\n                  children: \"Twenty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.selector,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"label\",\n                children: \"Parameter group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"label\",\n                id: \"select\",\n                value: \"20\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"10\",\n                  children: \"Ten\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"20\",\n                  children: \"Twenty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [this.state.finale.length > 0 && this.state.filed && /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      top: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 97\n                  }, this), this.state.finale.map((_el, index) => _el.values.map((el, id) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      top: 0\n                    },\n                    children: [_el.date.slice(8, 10), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 80\n                    }, this), el.date.split('T')[1].slice(0, 2) + \"Z\"]\n                  }, id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 53\n                  }, this)))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.keys.map((elem, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      fontWeight: 'bold',\n                      color: \"#fff\",\n                      backgroundColor: \"#1a8cff\",\n                      left: 0,\n                      position: \"sticky\"\n                    },\n                    children: elem\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this), this.state.finale.map((_el, index) => _el.values.map((el, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 61\n                  }, this)))]\n                }, ind, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      filed: false,\n      data: [],\n      days: [],\n      finale: [],\n      keys: [],\n      loading: false,\n      modal: false,\n      current: {}\n    };\n  }\n\n  async range() {\n    await new Promise(r => setTimeout(r, 3000));\n    var days = [];\n    var final = [];\n    this.state.data.forEach(element => {\n      // console.log(element.date.split('T')[0]);\n      var existed = days.indexOf(element.date.split('T')[0]);\n\n      if (existed === -1) {\n        var dayTMP = element.date.split('T')[0];\n        days.push(dayTMP);\n      }\n    });\n    this.setState({\n      days: days\n    }, () => {\n      days.forEach(element => {\n        var filteredHour = this.state.data.filter(el => el.date.split('T')[0] === element);\n        var tmp = {};\n        tmp['date'] = element;\n        tmp[\"values\"] = filteredHour;\n        final.push(tmp);\n      }); // console.log(final[0].values[0].values);\n\n      this.setState({\n        finale: final,\n        keys: Object.keys(final[0].values[0].values),\n        loading: false\n      }, () => {});\n    });\n    console.log(final[0]);\n  }\n\n  convertDate(date) {\n    var tmp = new Date(date);\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    var final = tmp.toLocaleDateString('fr-FR', options);\n    return final.charAt(0).toUpperCase() + final.slice(1); // console.log(tmp);\n  }\n\n  setChart(index, variable) {\n    // console.log(this.state.finale[0].values.filter((el) => {\n    //     return el.date\n    // }));\n    const labels = this.state.finale[this.state.current.index].values.map(el => el.date.split('T')[1].slice(0, 2) + \"Z\");\n    const data = this.state.finale[this.state.current.index].values.map(el => el.values[this.state.current.variable]);\n    const state = {\n      labels: labels,\n      datasets: [{\n        label: this.state.current.variable,\n        backgroundColor: '#f50057',\n        // borderColor: 'rgba(0,0,0,1)',\n        // borderWidth: 2,\n        data: data\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      open: () => {\n        this.setState({\n          modal: true\n        });\n      },\n      onClose: () => {\n        this.setState({\n          modal: false\n        });\n      },\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      style: {\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#fff',\n          width: 800,\n          borderColor: \"#fff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            this.setState({\n              modal: false\n            });\n          },\n          style: {\n            backgroundColor: \"red\",\n            alignSelf: \"center\",\n            fontSize: 13,\n            fontWeight: \"bold\"\n          },\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: state,\n          options: {\n            title: {\n              display: true,\n              text: this.state.current.date,\n              fontSize: 20\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst styles = {\n  selector: {\n    displey: \"flex\",\n    flexDirection: 'row',\n    margin: 20\n  }\n};\nexport default Main;","map":{"version":3,"sources":["/root/Bureau/Parser/src/components/ClientMain.js"],"names":["CircularProgress","InputLabel","MenuItem","Modal","Select","React","Component","Bar","convert","Main","constructor","props","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","data","setState","filed","readAsText","files","render","state","loading","range","alert","modal","finale","length","setChart","display","flexDirection","styles","selector","top","map","_el","index","values","el","id","date","slice","split","keys","elem","ind","fontWeight","color","backgroundColor","left","position","i","days","current","Promise","r","setTimeout","final","forEach","element","existed","indexOf","dayTMP","push","filteredHour","filter","tmp","Object","console","log","convertDate","Date","options","weekday","year","month","day","toLocaleDateString","charAt","toUpperCase","variable","labels","datasets","label","alignItems","justifyContent","width","borderColor","alignSelf","fontSize","title","scales","yAxes","ticks","beginAtZero","legend","displey","margin"],"mappings":"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","sourcesContent":["import { CircularProgress, InputLabel, MenuItem, Modal, Select } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { Bar } from '@reactchartjs/react-chart.js'\n\n\nimport { convert } from \"./Parser\";\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false,\n            data: [],\n            days: [],\n            finale: [],\n            keys: [],\n            loading: false,\n            modal: false,\n            current: {}\n        }\n    }\n\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            // console.log(data);\n            if (data) {\n                this.setState({ data: data, filed: true })\n            } else {\n                this.setState({ filed: false })\n            }\n\n        };\n        reader.readAsText(e.target.files[0])\n    }\n    async range() {\n        await new Promise(r => setTimeout(r, 3000));\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            // console.log(element.date.split('T')[0]);\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n            // console.log(final[0].values[0].values);\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false }, () => { })\n        })\n        console.log(final[0]);\n    }\n\n\n    convertDate(date) {\n        var tmp = new Date(date)\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        var final = tmp.toLocaleDateString('fr-FR', options)\n        return (final.charAt(0).toUpperCase() + final.slice(1));\n        // console.log(tmp);\n    }\n\n\n    setChart(index, variable) {\n        // console.log(this.state.finale[0].values.filter((el) => {\n        //     return el.date\n        // }));\n        const labels = this.state.finale[this.state.current.index].values.map((el) => (el.date.split('T')[1].slice(0, 2) + \"Z\"))\n        const data = this.state.finale[this.state.current.index].values.map((el) => (el.values[this.state.current.variable]))\n\n        const state = {\n            labels: labels,\n            datasets: [\n                {\n                    label: this.state.current.variable,\n                    backgroundColor: '#f50057',\n                    // borderColor: 'rgba(0,0,0,1)',\n                    // borderWidth: 2,\n                    data: data\n                }\n            ]\n        }\n        return (\n            <Modal\n                open={() => { this.setState({ modal: true }) }}\n                onClose={() => { this.setState({ modal: false }) }}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                {/* {body} */}\n                <div style={{ backgroundColor: '#fff', width: 800, borderColor: \"#fff\" }} >\n\n                    <button type=\"button\" onClick={() => { this.setState({ modal: false }) }} style={{ backgroundColor: \"red\", alignSelf: \"center\", fontSize: 13, fontWeight: \"bold\" }} >Fermer</button>\n                    <Bar\n                        data={state}\n                        options={{\n                            title: {\n                                display: true,\n                                text: this.state.current.date,\n                                fontSize: 20\n                            },\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n                </div>\n            </Modal>\n        )\n\n    }\n\n    render = () => {\n\n        return (\n            <div>\n                <h2>Convertisseur Kml to JS</h2>\n\n                <input type=\"file\" onChange={(e) => this.showFile(e)} accept='.xml,.kml' />\n                {/* <DataTable\n                    title=\"Arnold Movies\"\n                    columns={columns}\n                    data={this.state.data}\n                /> */}\n                <button title='Valider' onClick={() => {\n                    if (this.state.filed) {\n                        this.setState({ loading: true }, () => { this.range() })\n                    } else {\n                        alert('Veuillez choisir un fichier Ã  convertir')\n                    }\n                }} >Valider</button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.filed && this.state.modal && this.state.finale.length > 0 && this.setChart()\n                    }\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }} >\n\n                        <div style={styles.selector} >\n                            <InputLabel id=\"label\">Location</InputLabel>\n                            <Select labelId=\"label\" id=\"select\" value=\"20\">\n                                <MenuItem value=\"10\">Ten</MenuItem>\n                                <MenuItem value=\"20\">Twenty</MenuItem>\n                            </Select>\n                        </div>\n\n                        <div style={styles.selector} >\n                            <InputLabel id=\"label\">Parameter group</InputLabel>\n                            <Select labelId=\"label\" id=\"select\" value=\"20\">\n                                <MenuItem value=\"10\">Ten</MenuItem>\n                                <MenuItem value=\"20\">Twenty</MenuItem>\n                            </Select>\n                        </div>\n                    </div>\n                    {\n                        <div >\n\n                            <table>\n                                <thead  >\n                                    {/* <tr>\n                                        {\n                                            this.state.finale.length > 0 && this.state.filed && <th ></th>\n                                        }\n                                        {\n                                            this.state.finale.map((_el, index) => (\n                                                _el.values.map((el, id) => (\n                                                    <th key={id} >{_el.date.slice(8, 10)}</th>\n                                                ))\n                                            ))\n                                        }\n                                    </tr> */}\n                                    <tr>\n                                        {\n                                            this.state.finale.length > 0 && this.state.filed && <th style={{ top: 0 }} ></th>\n                                        }\n                                        {\n                                            this.state.finale.map((_el, index) => (\n                                                _el.values.map((el, id) => (\n                                                    <th style={{ top: 0 }} key={id} >\n                                                        {_el.date.slice(8, 10)}<br />\n                                                        {el.date.split('T')[1].slice(0, 2) + \"Z\"}\n                                                    </th>\n                                                ))\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.keys.map((elem, ind) => (\n                                            <tr key={ind} >\n                                                <td style={{ fontWeight: 'bold', color: \"#fff\", backgroundColor: \"#1a8cff\", left: 0, position: \"sticky\" }} >\n                                                    {elem}\n                                                    {/* <br /><button type=\"button\" onClick={() => { this.setState({ modal: true, current: { variable: elem, index: index, date: this.convertDate(_el.date) } }) }} style={{ backgroundColor: \"#3f51b5\", padding: 2, marginLeft: 5, alignSelf: \"center\", fontSize: 10, fontWeight: \"bold\", zIndex: 0 }} >Voir le graphe</button> */}\n                                                </td>\n                                                {\n                                                    this.state.finale.map((_el, index) => (\n                                                        _el.values.map((el, i) => (\n                                                            <td key={i} >{el.values[elem] === \"-\" ? \"N/A\" : el.values[elem]}</td>\n                                                        ))\n                                                    ))\n                                                }\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selector: {\n        displey: \"flex\",\n        flexDirection: 'row',\n        margin: 20\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}