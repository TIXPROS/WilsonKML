{"ast":null,"code":"var parser=require('xml2js');//Module d'extraction des données du fichiers KML ou XML\nvar convert=function convert(value){try{var finalData=[];var issuer=null;var productID=null;var generatingProcess=null;var issueTime=null;// var origin = null\nparser.parseString(value,function(err,result){//Extraction des jours\nvar days=result[\"kml:kml\"]['kml:Document'][0]['kml:ExtendedData'][0]['dwd:ProductDefinition'][0]['dwd:ForecastTimeSteps'][0]['dwd:TimeStep'];//Extraction des données\nvar data=result[\"kml:kml\"]['kml:Document'][0]['kml:Placemark'][0]['kml:ExtendedData'][0][\"dwd:Forecast\"];//Extraction de données suppléméntaires\nvar base=result[\"kml:kml\"]['kml:Document'][0]['kml:ExtendedData'][0]['dwd:ProductDefinition'][0];issuer=base['dwd:Issuer'][0];productID=base['dwd:ProductID'][0];generatingProcess=base['dwd:GeneratingProcess'][0];issueTime=base['dwd:IssueTime'][0];var tmpData=[];//Découpage des données(les entrées étant chacune une unique ligne de caratères, il faut les découper)\ndata.forEach(function(element){var tmp=element['dwd:value'][0].split(/\\s+/);var filter=tmp.filter(function(el){return el!==\"\";});tmpData.push([element[\"$\"]['dwd:elementName'],filter]);});//Epuration des dates\ndays.forEach(function(element,index){var jsonObject={};var tmp={};jsonObject.date=element;tmpData.forEach(function(element){tmp[element[0]]=element[1][index];});jsonObject.values=tmp;finalData.push(jsonObject);});});return{data:finalData,supp:{issuer:issuer,productID:productID,generatingProcess:generatingProcess,issueTime:issueTime}};}catch(error){console.log(error);alert('Le fichier choisi est incompatible');return false;}};export{convert};","map":{"version":3,"sources":["/root/Bureau/Parser/src/components/Parser.js"],"names":["parser","require","convert","value","finalData","issuer","productID","generatingProcess","issueTime","parseString","err","result","days","data","base","tmpData","forEach","element","tmp","split","filter","el","push","index","jsonObject","date","values","supp","error","console","log","alert"],"mappings":"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","sourcesContent":["const parser = require('xml2js') //Module d'extraction des données du fichiers KML ou XML\n\nconst convert = (value) => {\n    try {\n        var finalData = []\n        var issuer = null\n        var productID = null\n        var generatingProcess = null\n        var issueTime = null\n        // var origin = null\n\n        parser.parseString(value, (err, result) => {\n\n            //Extraction des jours\n            let days = result[\"kml:kml\"]['kml:Document'][0]['kml:ExtendedData'][0]['dwd:ProductDefinition'][0]['dwd:ForecastTimeSteps'][0]['dwd:TimeStep'];\n\n            //Extraction des données\n            let data = result[\"kml:kml\"]['kml:Document'][0]['kml:Placemark'][0]['kml:ExtendedData'][0][\"dwd:Forecast\"];\n\n\n            //Extraction de données suppléméntaires\n            let base = result[\"kml:kml\"]['kml:Document'][0]['kml:ExtendedData'][0]['dwd:ProductDefinition'][0]\n\n            issuer = base['dwd:Issuer'][0]\n            productID = base['dwd:ProductID'][0]\n            generatingProcess = base['dwd:GeneratingProcess'][0]\n            issueTime = base['dwd:IssueTime'][0]\n\n\n            var tmpData = [];\n\n            //Découpage des données(les entrées étant chacune une unique ligne de caratères, il faut les découper)\n            data.forEach((element) => {\n                let tmp = element['dwd:value'][0].split(/\\s+/);\n\n                let filter = tmp.filter(function (el) {\n                    return el !== \"\"\n                });\n\n\n                tmpData.push([element[\"$\"]['dwd:elementName'], filter])\n            });\n            //Epuration des dates\n            days.forEach((element, index) => {\n                let jsonObject = {};\n                let tmp = {}\n                jsonObject.date = element;\n                tmpData.forEach(element => {\n                    tmp[element[0]] = element[1][index]\n                });\n                jsonObject.values = tmp\n                finalData.push(jsonObject)\n            });\n\n        })\n        return {\n            data: finalData,\n            supp: {\n                issuer: issuer,\n                productID: productID,\n                generatingProcess: generatingProcess,\n                issueTime: issueTime\n            }\n\n        }\n    } catch (error) {\n        console.log(error);\n        alert('Le fichier choisi est incompatible')\n        return false;\n    }\n}\n\nexport { convert };"]},"metadata":{},"sourceType":"module"}