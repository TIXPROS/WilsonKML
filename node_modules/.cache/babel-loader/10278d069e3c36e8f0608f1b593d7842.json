{"ast":null,"code":"var _jsxFileName = \"/root/Bureau/Parser/src/components/ClientMain.js\";\nimport { Button, CircularProgress, Input, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { findVariableName, findVariableUnit } from '../constants/variableName'; //Importation des fonctions permettant de retrouver les noms et les unités des variables \n\nimport { findGroup } from \"../constants/unityConvert\";\nimport { convert } from \"./Parser\"; //Importation de l'extracteur redéfnie\n\nimport { filter } from \"../constants/filter\"; //Importation de la fonction permettant de filtrer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sectionTitles = [\"All\", \"Wind\", \"Wind speed threshold\", \"Wind gusts 1h\", \"Wind gusts 3h\", \"Temperature\", \"Visibility\"];\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        var data = convert(text);\n\n        if (data.data) {\n          this.setState({\n            data: data.data,\n            filed: true,\n            supp: data.supp\n          });\n        } else {\n          this.setState({\n            filed: false\n          });\n        }\n      };\n\n      e.target.files[0] && reader.readAsText(e.target.files[0]);\n    };\n\n    this.loadFolder = async e => {\n      // console.log(e.target.files);\n      var folder = e.target.files;\n      var filterKML = [...folder].filter(el => el.type === \"application/vnd.google-earth.kml+xml\");\n      console.log(filterKML.length);\n    };\n\n    this.state = {\n      filed: false,\n      //Controleur de l'existence d'un fichier chargé\n      data: [],\n      //les lignes de données\n      days: [],\n      //les jours\n      finale: [],\n      //données compilées\n      keys: [],\n      //les variables (PPPP et autres)\n      loading: false,\n      //Controleur du chargement de la page\n      supp: null,\n      //Données suppléméntaires de locations,\n      filter: \"All\",\n      current: {}\n    };\n  } //Fonction de récupération de fichier\n\n\n  //Fonction de compilation des données\n  async range() {\n    await new Promise(r => setTimeout(r, 2000));\n    var days = [];\n    var final = [];\n    this.state.data.forEach(element => {\n      var existed = days.indexOf(element.date.split('T')[0]);\n\n      if (existed === -1) {\n        var dayTMP = element.date.split('T')[0];\n        days.push(dayTMP);\n      }\n    });\n    this.setState({\n      days: days\n    }, () => {\n      //Extraction du Jour/Mois/Années des dates\n      days.forEach(element => {\n        var filteredHour = this.state.data.filter(el => el.date.split('T')[0] === element);\n        var tmp = {};\n        tmp['date'] = element;\n        tmp[\"values\"] = filteredHour;\n        final.push(tmp);\n      });\n      this.setState({\n        finale: final,\n        keys: Object.keys(final[0].values[0].values),\n        loading: false\n      });\n    });\n  } //Rendu visuel\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h2\",\n        children: \"Convertisseur Kml to JS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          onChange: e => this.loadFolder(e),\n          inputProps: {\n            webkitdirectory: \"\",\n            directory: \"\",\n            style: {\n              height: 30\n            }\n          },\n          style: {\n            marginTop: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Valider\",\n        onClick: () => {\n          if (this.state.filed) {\n            this.setState({\n              loading: true\n            }, () => {\n              this.range();\n            });\n          } else {\n            alert('Veuillez choisir un fichier à convertir');\n          }\n        },\n        color: \"primary\",\n        variant: \"contained\",\n        style: {\n          marginTop: 10,\n          marginBottom: 10\n        },\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\",\n          style: {\n            marginTop: 15\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.finale.length > 0 && this.state.filed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontWeight: 'bold',\n                  marginRight: 5\n                },\n                children: \"Origin : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"EBBR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontWeight: 'bold',\n                  marginRight: 5\n                },\n                children: \"Issuer : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: this.state.supp.issuer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontWeight: 'bold',\n                  marginRight: 5,\n                  marginLeft: 20\n                },\n                children: \"ProductID : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: this.state.supp.productID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontWeight: 'bold',\n                  marginRight: 5,\n                  marginLeft: 20\n                },\n                children: \"IssueTime : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: this.state.supp.issueTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.selector,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"label\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"label\",\n                id: \"select\",\n                value: \"EBBR\",\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"EBBR\",\n                  children: \"EBBR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.selector,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"label\",\n                children: \"Parameter group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"label\",\n                id: \"select\",\n                value: this.state.filter,\n                onChange: val => {\n                  this.setState({\n                    filter: val.target.value\n                  });\n                },\n                children: sectionTitles.map((el, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: el,\n                  children: el\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), this.state.finale.length > 0 && this.state.filed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#1a8cff',\n              width: 330,\n              height: 55,\n              position: \"absolute\",\n              zIndex: 1111,\n              left: \"2%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              display: \"block\",\n              maxHeight: 600,\n              overflowY: \"scroll\",\n              overflowX: \"scroll\",\n              maxWidth: \"96%\",\n              marginLeft: \"2%\",\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [this.state.finale.length > 0 && this.state.filed && /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    top: 0\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 45\n                }, this), this.state.finale.map(_el => _el.values.map((el, id) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    top: 0\n                  },\n                  children: [_el.date.slice(8, 10), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 80\n                  }, this), el.date.split('T')[1].slice(0, 2) + \"Z\"]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 53\n                }, this)))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filter(this.state.filter, this.state.keys).map((elem, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    left: 0,\n                    position: \"sticky\",\n                    backgroundColor: \"#1a8cff\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 'bold',\n                      color: \"#fff\",\n                      width: 300\n                    },\n                    children: findVariableName(elem) === false ? elem : findVariableName(elem) + \"\\n(\" + findVariableUnit(elem) + \")\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this), this.state.finale.map(_el => _el.values.map((el, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  onClick: () => {\n                    this.setState({\n                      current: {\n                        id: i,\n                        variable: elem\n                      }\n                    });\n                  },\n                  style: {\n                    cursor: \"pointer\",\n                    backgroundColor: (i === this.state.current.id || elem === this.state.current.variable) && \"#70b7ff\"\n                  },\n                  children: el.values[elem] === \"-\" ? \"N/A\" : findGroup(elem, el.values[elem])\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 61\n                }, this)))]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              textAlign: 'left',\n              marginLeft: '2%'\n            },\n            children: \"Showing 1 to \" + this.state.keys.length + \" of \" + this.state.keys.length + \" pages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 77\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst styles = {\n  selector: {\n    displey: \"flex\",\n    flexDirection: 'row',\n    margin: 15\n  }\n};\nexport default Main;","map":{"version":3,"sources":["/root/Bureau/Parser/src/components/ClientMain.js"],"names":["Button","CircularProgress","Input","InputLabel","MenuItem","Select","Typography","React","Component","findVariableName","findVariableUnit","findGroup","convert","filter","sectionTitles","Main","constructor","props","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","data","setState","filed","supp","files","readAsText","loadFolder","folder","filterKML","el","type","console","log","length","state","days","finale","keys","loading","current","range","Promise","r","setTimeout","final","forEach","element","existed","indexOf","date","split","dayTMP","push","filteredHour","tmp","Object","values","render","webkitdirectory","directory","style","height","marginTop","alert","marginBottom","margin","display","flexDirection","fontWeight","marginRight","issuer","marginLeft","productID","issueTime","styles","selector","val","value","map","index","backgroundColor","width","position","zIndex","left","maxHeight","overflowY","overflowX","maxWidth","top","_el","id","slice","elem","ind","color","i","variable","cursor","textAlign","displey"],"mappings":"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","sourcesContent":["import { Button, CircularProgress, Input, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { findVariableName, findVariableUnit } from '../constants/variableName' //Importation des fonctions permettant de retrouver les noms et les unités des variables \nimport { findGroup } from \"../constants/unityConvert\"\n\nimport { convert } from \"./Parser\";//Importation de l'extracteur redéfnie\nimport { filter } from \"../constants/filter\";//Importation de la fonction permettant de filtrer\n\n\nconst sectionTitles = [\n    \"All\",\n    \"Wind\",\n    \"Wind speed threshold\",\n    \"Wind gusts 1h\",\n    \"Wind gusts 3h\",\n    \"Temperature\",\n    \"Visibility\",\n];\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filed: false, //Controleur de l'existence d'un fichier chargé\n            data: [], //les lignes de données\n            days: [], //les jours\n            finale: [], //données compilées\n            keys: [], //les variables (PPPP et autres)\n            loading: false, //Controleur du chargement de la page\n            supp: null, //Données suppléméntaires de locations,\n            filter: \"All\",\n            current: {}\n        }\n    }\n\n    //Fonction de récupération de fichier\n    showFile = async (e) => {\n        e.preventDefault()\n        const reader = new FileReader()\n        reader.onload = async (e) => {\n            const text = (e.target.result)\n            var data = convert(text)\n            if (data.data) {\n                this.setState({ data: data.data, filed: true, supp: data.supp })\n            } else {\n                this.setState({ filed: false })\n            }\n\n        };\n        e.target.files[0] && reader.readAsText(e.target.files[0])\n    }\n\n\n    loadFolder = async (e) => {\n        // console.log(e.target.files);\n        var folder = e.target.files\n        var filterKML = [...folder].filter((el) => (el.type === \"application/vnd.google-earth.kml+xml\"))\n        console.log(filterKML.length);\n    }\n\n\n    //Fonction de compilation des données\n    async range() {\n        await new Promise(r => setTimeout(r, 2000));\n        var days = []\n        var final = []\n        this.state.data.forEach(element => {\n            var existed = days.indexOf(element.date.split('T')[0])\n\n            if (existed === -1) {\n                var dayTMP = element.date.split('T')[0]\n                days.push(dayTMP)\n            }\n        });\n        this.setState({\n            days: days\n        }, () => {\n            //Extraction du Jour/Mois/Années des dates\n            days.forEach((element) => {\n                var filteredHour = this.state.data.filter((el) => el.date.split('T')[0] === element)\n                var tmp = {}\n                tmp['date'] = element;\n                tmp[\"values\"] = filteredHour\n\n                final.push(tmp);\n            });\n\n            this.setState({ finale: final, keys: Object.keys(final[0].values[0].values), loading: false })\n        })\n    }\n\n    //Rendu visuel\n    render() {\n\n        return (\n            <div>\n                <Typography variant=\"h3\" component=\"h2\">Convertisseur Kml to JS</Typography>\n                <div>\n                    {/* <Input type=\"file\" onChange={(e) => this.showFile(e)} inputProps={{ accept: '.xml,.kml', style: { height: 30 } }} style={{ marginTop: 20, }} /> */}\n                    <Input type=\"file\" onChange={(e) => this.loadFolder(e)} inputProps={{ webkitdirectory: \"\", directory: \"\", style: { height: 30 } }} style={{ marginTop: 20, }} />\n                </div>\n                <br />\n                <Button\n                    title='Valider'\n                    onClick={() => {\n                        if (this.state.filed) {\n                            this.setState({ loading: true }, () => { this.range() })\n                        } else {\n                            alert('Veuillez choisir un fichier à convertir')\n                        }\n                    }}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ marginTop: 10, marginBottom: 10 }}\n                >Valider</Button>\n\n                <div>\n                    {\n                        this.state.loading && <CircularProgress color=\"secondary\" style={{ marginTop: 15 }} />\n                    }\n                </div>\n\n                <div>\n                    {\n                        this.state.finale.length > 0 && this.state.filed &&\n                        <div>\n                            <div style={{ margin: 20 }} >\n                                <div style={{ display: \"flex\", flexDirection: \"row\" }} >\n                                    <Typography style={{ fontWeight: 'bold', marginRight: 5 }} >Origin : </Typography>\n                                    <Typography>EBBR</Typography>\n                                </div>\n                                <div style={{ display: \"flex\", flexDirection: \"row\" }} >\n                                    <Typography style={{ fontWeight: 'bold', marginRight: 5, }} >Issuer : </Typography>\n                                    <Typography>{this.state.supp.issuer}</Typography>\n                                    <Typography style={{ fontWeight: 'bold', marginRight: 5, marginLeft: 20 }} >ProductID : </Typography>\n                                    <Typography>{this.state.supp.productID}</Typography>\n                                    <Typography style={{ fontWeight: 'bold', marginRight: 5, marginLeft: 20 }} >IssueTime : </Typography>\n                                    <Typography>{this.state.supp.issueTime}</Typography>\n                                    {/* <Typography style={{ fontWeight: 'bold', marginRight: 5, marginLeft: 20 }} >Origin : </Typography>\n                                    <Typography>EBBR</Typography> */}\n                                </div>\n                            </div>\n\n                            <div style={{ display: \"flex\", flexDirection: \"row\" }} >\n\n                                <div style={styles.selector} >\n                                    <InputLabel id=\"label\">Location</InputLabel>\n                                    <Select labelId=\"label\" id=\"select\" value=\"EBBR\">\n                                        <MenuItem value=\"EBBR\">EBBR</MenuItem>\n                                    </Select>\n                                </div>\n\n                                <div style={styles.selector} >\n                                    <InputLabel id=\"label\">Parameter group</InputLabel>\n                                    <Select labelId=\"label\" id=\"select\" value={this.state.filter} onChange={(val) => { this.setState({ filter: val.target.value }) }} >\n                                        {\n                                            sectionTitles.map((el, index) => (\n                                                <MenuItem key={index} value={el}>{el}</MenuItem>\n                                            ))\n                                        }\n                                    </Select>\n                                </div>\n                            </div>\n                        </div >\n                    }\n                    {\n                        this.state.finale.length > 0 && this.state.filed && <div\n                        >\n                            <div style={{ backgroundColor: '#1a8cff', width: 330, height: 55, position: \"absolute\", zIndex: 1111, left: \"2%\" }} ></div>\n\n                            <table\n                                style={{\n                                    display: \"block\",\n                                    maxHeight: 600,\n                                    overflowY: \"scroll\",\n                                    overflowX: \"scroll\",\n                                    maxWidth: \"96%\",\n                                    marginLeft: \"2%\",\n                                    position: 'relative'\n                                }}\n                            >\n                                <thead  >\n                                    <tr>\n                                        {\n                                            this.state.finale.length > 0 && this.state.filed &&\n                                            <th style={{ top: 0 }} ></th>\n                                        }\n                                        {\n                                            this.state.finale.map((_el) => (\n                                                _el.values.map((el, id) => (\n                                                    <th style={{ top: 0 }} key={id} >\n                                                        {_el.date.slice(8, 10)}<br />\n                                                        {el.date.split('T')[1].slice(0, 2) + \"Z\"}\n                                                    </th>\n                                                ))\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        filter(this.state.filter, this.state.keys).map((elem, ind) => (\n                                            <tr key={ind} >\n                                                <td style={{ left: 0, position: \"sticky\", backgroundColor: \"#1a8cff\" }} >\n                                                    <div style={{ fontWeight: 'bold', color: \"#fff\", width: 300 }} >\n                                                        {findVariableName(elem) === false ? elem : (findVariableName(elem) + \"\\n(\" + findVariableUnit(elem) + \")\")}\n                                                    </div>\n                                                </td>\n                                                {\n                                                    this.state.finale.map((_el) => (\n                                                        _el.values.map((el, i) => (\n                                                            <td onClick={() => { this.setState({ current: { id: i, variable: elem } }) }} style={{ cursor: \"pointer\", backgroundColor: (i === this.state.current.id || elem === this.state.current.variable) && \"#70b7ff\" }} key={i} >{el.values[elem] === \"-\" ? \"N/A\" : findGroup(elem, el.values[elem])}</td>\n                                                        ))\n                                                    ))\n                                                }\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                            <Typography style={{ textAlign: 'left', marginLeft: '2%' }} >{\"Showing 1 to \" + this.state.keys.length + \" of \" + this.state.keys.length + \" pages\"}</Typography>\n                        </div>\n                    }\n                </div >\n            </div >\n        )\n    }\n}\n\nconst styles = {\n    selector: {\n        displey: \"flex\",\n        flexDirection: 'row',\n        margin: 15\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}